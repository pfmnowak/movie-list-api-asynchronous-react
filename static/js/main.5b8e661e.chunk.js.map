{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/AddMovie.js","components/Movie.js","components/MoviesList.js","App.js","index.js"],"names":["module","exports","AddMovie","props","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","movie","title","current","value","openingText","releaseDate","onAddMovie","className","classes","control","htmlFor","type","id","ref","rows","Movie","MovieList","movies","map","key","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","useCallback","fetch","response","ok","Error","json","data","loadedMovies","push","message","useEffect","addMovieHandler","method","body","JSON","stringify","headers","console","log","content","length","MoviesList","Fragment","onClick","ReactDOM","createRoot","document","getElementById","render"],"mappings":";4HACAA,EAAOC,QAAU,CAAC,QAAU,4B,oBCA5BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,cAAc,kC,mMCyCjBC,MAtCf,SAAkBC,GAChB,IAAMC,EAAWC,iBAAO,IAClBC,EAAiBD,iBAAO,IACxBE,EAAiBF,iBAAO,IAgB9B,OACE,0BAAMG,SAfR,SAAuBC,GACrBA,EAAMC,iBAIN,IAAMC,EAAQ,CACZC,MAAOR,EAASS,QAAQC,MACxBC,YAAaT,EAAeO,QAAQC,MACpCE,YAAaT,EAAeM,QAAQC,OAGtCX,EAAMc,WAAWN,KAKf,yBAAKO,UAAWC,IAAQC,SACtB,2BAAOC,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOC,GAAG,QAAQC,IAAKpB,KAErC,yBAAKc,UAAWC,IAAQC,SACtB,2BAAOC,QAAQ,gBAAf,gBACA,8BAAUI,KAAK,IAAIF,GAAG,eAAeC,IAAKlB,KAE5C,yBAAKY,UAAWC,IAAQC,SACtB,2BAAOC,QAAQ,QAAf,gBACA,2BAAOC,KAAK,OAAOC,GAAG,OAAOC,IAAKjB,KAEpC,+C,gBCvBSmB,EAVD,SAACvB,GACb,OACE,wBAAIe,UAAWC,IAAQR,OACrB,4BAAKR,EAAMS,OACX,4BAAKT,EAAMa,aACX,2BAAIb,EAAMY,e,gBCWDY,EAfG,SAACxB,GACjB,OACE,wBAAIe,UAAWC,IAAQ,gBACpBhB,EAAMyB,OAAOC,KAAI,SAAClB,GAAD,OAChB,kBAAC,EAAD,CACEmB,IAAKnB,EAAMY,GACXX,MAAOD,EAAMC,MACbI,YAAaL,EAAMK,YACnBD,YAAaJ,EAAMI,mB,yyMC8EdgB,MAtFf,WACE,MAA4BC,mBAAS,IAArC,mBAAOJ,EAAP,KAAeK,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAqBC,sBAAW,sBAAC,iGACrCJ,GAAa,GACbE,EAAS,MAF4B,kBAIZG,MACrB,uFALiC,WAI7BC,EAJ6B,QAOrBC,GAPqB,sBAQ3B,IAAIC,MAAM,yBARiB,wBAWhBF,EAASG,OAXO,QAenC,IAAWd,KAJLe,EAX6B,OAa7BC,EAAe,GAEHD,EAChBC,EAAaC,KAAK,CAChBxB,GAAIO,EACJlB,MAAOiC,EAAKf,GAAKlB,MACjBI,YAAa6B,EAAKf,GAAKd,YACvBD,YAAa8B,EAAKf,GAAKf,cAI3BkB,EAAUa,GAxByB,kDA0BnCT,EAAS,KAAMW,SA1BoB,QA6BrCb,GAAa,GA7BwB,0DA8BpC,IAEHc,qBAAU,WACRX,MACC,CAACA,IAEJ,IAAMY,EAAe,uCAAG,WAAOvC,GAAP,yFACC6B,MACrB,sFACA,CACEW,OAAQ,OACRC,KAAMC,KAAKC,UAAU3C,GACrB4C,QAAS,CACP,eAAgB,sBAPA,cAChBd,EADgB,gBAYHA,EAASG,OAZN,OAYhBC,EAZgB,OActBW,QAAQC,IAAIZ,GACZP,IAfsB,2CAAH,sDAkBjBoB,EAAU,+CAcd,OAZI9B,EAAO+B,OAAS,IAClBD,EAAU,kBAACE,EAAD,CAAYhC,OAAQA,KAG5BQ,IACFsB,EAAU,2BAAItB,IAGZF,IACFwB,EAAU,0CAIV,kBAAC,IAAMG,SAAP,KACE,iCACE,kBAAC,EAAD,CAAU5C,WAAYiC,KAExB,iCACE,4BAAQY,QAASxB,GAAjB,iBAEF,iCAAUoB,KChFHK,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,kBAAC,EAAD,S","file":"static/js/main.5b8e661e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__3ydwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__nJ3iP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__2tYBb\"};","import React, { useRef } from 'react';\n\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='text' id='date' ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import React from \"react\";\n\nimport classes from \"./Movie.module.css\";\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport AddMovie from \"./components/AddMovie\";\nimport MoviesList from \"./components/MoviesList\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://react-http-9fa8a-default-rtdb.europe-west1.firebasedatabase.app/movies.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n\n      const loadedMovies = [];\n\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          releaseDate: data[key].releaseDate,\n          openingText: data[key].openingText,\n        });\n      }\n\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  const addMovieHandler = async (movie) => {\n    const response = await fetch(\n      \"https://react-http-9fa8a-default-rtdb.europe-west1.firebasedatabase.app/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const data = await response.json();\n\n    console.log(data);\n    fetchMoviesHandler();\n  };\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}